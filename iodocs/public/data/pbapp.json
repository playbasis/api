{
  "endpoints": [
    {
      "name": "Auth API",
      "methods": [
        {
          "MethodName": "Auth",
          "Synopsis": "Request access token from playbasis server.",
          "HTTPMethod": "POST",
          "URI": "/Auth",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "api_key",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "api key issued by Playbasis"
            },
            {
              "Name": "api_secret",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "api secret issued by Playbasis"
            }
          ]
        },
        {
          "MethodName": "Renew",
          "Synopsis": "Create a new token and discard the current token",
          "HTTPMethod": "POST",
          "URI": "/Auth/renew",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "api_key",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "api key issued by Playbasis"
            },
            {
              "Name": "api_secret",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "api secret issued by Playbasis"
            }
          ]
        }
      ]
    },
    {
      "name": "Player API",
      "methods": [
        {
          "MethodName": "Player Info (public data only)",
          "Synopsis": "Get public information about a player.",
          "HTTPMethod": "GET",
          "URI": "/Player/:id",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "id",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "player id as used in client's website"
            }
          ]
        },
        {
          "MethodName": "Player Info (include private data)",
          "Synopsis": "Get public and private information about a player.",
          "HTTPMethod": "POST",
          "URI": "/Player/:id",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "token",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "access token returned from Auth"
            },
            {
              "Name": "id",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "player id as used in client's website"
            }
          ]
        },
        {
          "MethodName": "List Player (Basic information)",
          "Synopsis": "Get basic information of players.",
          "HTTPMethod": "POST",
          "URI": "/Player/list",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "token",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "access token returned from Auth"
            },
            {
              "Name": "list_player_id",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "player id as used in client's website separate with ',' example '1,2,3'"
            }
          ]
        },
        {
          "MethodName": "Detailed Player Info (public data only)",
          "Synopsis": "Get detailed public information about a player, including points and badges.",
          "HTTPMethod": "GET",
          "URI": "/Player/:id/data/all",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "id",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "player id as used in client's website"
            }
          ]
        },
        {
          "MethodName": "Detailed Player Info (include private data)",
          "Synopsis": "Get detailed public and private information about a player, including points and badges",
          "HTTPMethod": "POST",
          "URI": "/Player/:id/data/all",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "token",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "access token returned from Auth"
            },
            {
              "Name": "id",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "player id as used in client's website"
            }
          ]
        },
        {
          "MethodName": "List Custom Fields of Player",
          "Synopsis": "Get custom fields information about a player",
          "HTTPMethod": "GET",
          "URI": "/Player/:id/custom",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "id",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "player id as used in client's website"
            }
          ]
        },
        {
          "MethodName": "Set Custom Field of Player",
          "Synopsis": "Set custom field of a player",
          "HTTPMethod": "POST",
          "URI": "/Player/:id/custom",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "token",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "access token returned from Auth"
            },
            {
              "Name": "id",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "player id as used in client's website"
            },
            {
              "Name": "key",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "custom field keys separated by comma"
            },
            {
              "Name": "value",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "custom field values separated by comma"
            }
          ]
        },
        {
          "MethodName": "Register",
          "Synopsis": "Register a user from client's website as a Playbasis player.",
          "HTTPMethod": "POST",
          "URI": "/Player/:id/register",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "token",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "access token returned from Auth"
            },
            {
              "Name": "id",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "player id as used in client's website *** It's available only [A-Za-z0-9_-]"
            },
            {
              "Name": "username",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "username of the player"
            },
            {
              "Name": "email",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "email address of the player"
            },
            {
              "Name": "image",
              "Required": "Y",
              "Default": "https://www.pbapp.net/images/default_profile.jpg",
              "Type": "string",
              "Description": "url to the player profile image"
            },
            {
              "Name": "phone_number",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "+66xxyyyzzzz"
            },
            {
              "Name": "facebook_id",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "facebook id of the player"
            },
            {
              "Name": "twitter_id",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "twitter id of the player"
            },
            {
              "Name": "password",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "password of the player"
            },
            {
              "Name": "first_name",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "first name of the player"
            },
            {
              "Name": "last_name",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "last name of the player"
            },
            {
              "Name": "gender",
              "Required": "N",
              "Default": "",
              "Type": "enumerated",
              "Description": "1=Male, 2=Female",
              "EnumeratedList": [
                "1",
                "2"
              ]
            },
            {
              "Name": "birth_date",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "date of birth in the format YYYY-MM-DD (ex.1982-09-29)"
            },
            {
              "Name": "code",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "referral code of another player for invitation system"
            },
            {
              "Name": "anonymous",
              "Required": "N",
              "Default": "",
              "Type": "enumerated",
              "Description": "anonymous flag",
              "EnumeratedList": [
                "0",
                "1"
              ]
            },
            {
              "Name": "device_id",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "device id to verify with SMS verification process"
            },
            {
              "Name": "approve_status",
              "Required": "N",
              "Default": "",
              "Type": "enumerated",
              "Description": "approval status",
              "EnumeratedList": [
                "approved",
                "rejected",
                "pending"
              ]
            }
          ]
        },
        {
          "MethodName": "Update",
          "Synopsis": "Update player information.",
          "HTTPMethod": "POST",
          "URI": "/Player/:id/update",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "token",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "access token returned from Auth"
            },
            {
              "Name": "id",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "player id as used in client's website"
            },
            {
              "Name": "username",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "username of the player"
            },
            {
              "Name": "email",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "email address of the player"
            },
            {
              "Name": "image",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "url to the player profile image"
            },
            {
              "Name": "phone_number",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "+66xxyyyzzzz"
            },
            {
              "Name": "exp",
              "Required": "N",
              "Default": "",
              "Type": "number",
              "Description": "player's experience points"
            },
            {
              "Name": "level",
              "Required": "N",
              "Default": "",
              "Type": "number",
              "Description": "player's level"
            },
            {
              "Name": "facebook_id",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "facebook id of the player"
            },
            {
              "Name": "twitter_id",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "twitter id of the player"
            },
            {
              "Name": "password",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "password of the player"
            },
            {
              "Name": "first_name",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "first name of the player"
            },
            {
              "Name": "last_name",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "last name of the player"
            },
            {
              "Name": "gender",
              "Required": "N",
              "Default": "",
              "Type": "enumerated",
              "Description": "1=Male, 2=Female",
              "EnumeratedList": [
                "1",
                "2"
              ]
            },
            {
              "Name": "birth_date",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "date of birth in the format YYYY-MM-DD (ex.1982-09-29)"
            },
            {
              "Name": "device_id",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "device id to verify with SMS verification process"
            },
            {
              "Name": "approve_status",
              "Required": "N",
              "Default": "",
              "Type": "enumerated",
              "Description": "approval status",
              "EnumeratedList": [
                "approved",
                "rejected",
                "pending"
              ]
            }
          ]
        },
        {
          "MethodName": "Reset player password",
          "Synopsis": "Reset player password that store in Playbasis system.",
          "HTTPMethod": "POST",
          "URI": "/Player/password/email",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "token",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "access token returned from Auth"
            },
            {
              "Name": "email",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "email as used in client's website"
            }
          ]
        },
        {
          "MethodName": "Verify player email",
          "Synopsis": "Verify player email that store in Playbasis system.",
          "HTTPMethod": "POST",
          "URI": "/Player/:id/email/verify",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "token",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "access token returned from Auth"
            },
            {
              "Name": "id",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "player id as used in client's website"
            }
          ]
        },
        {
          "MethodName": "Delete",
          "Synopsis": "Permenently delete a player from Playbasis database.",
          "HTTPMethod": "POST",
          "URI": "/Player/:id/delete",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "token",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "access token returned from Auth"
            },
            {
              "Name": "id",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "player id as used in client's website"
            }
          ]
        },
        {
          "MethodName": "Login",
          "Synopsis": "Tell Playbasis system that a player has logged in.",
          "HTTPMethod": "POST",
          "URI": "/Player/:id/login",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "token",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "access token returned from Auth"
            },
            {
              "Name": "id",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "player id as used in client's website"
            },
            {
              "Name": "session_id",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "session id of the player"
            },
            {
              "Name": "session_expires_in",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "session expires in seconds"
            }
          ]
        },
        {
          "MethodName": "Player Auth",
          "Synopsis": "Authenticate player with data in Playbasis system then login and also create session.",
          "HTTPMethod": "POST",
          "URI": "/Player/auth",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "token",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "access token returned from Auth"
            },
            {
              "Name": "email",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "email as used in client's website (either email or username is required)"
            },
            {
              "Name": "username",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "username as used in client's website (either email or username is required)"
            },
            {
              "Name": "password",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "password of the player"
            },
            {
              "Name": "device_token",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "device token to verify with SMS verification process"
            }
          ]
        },
        {
          "MethodName": "Request OTP",
          "Synopsis": "Request One time password.",
          "HTTPMethod": "POST",
          "URI": "/Player/auth/:id/requestOTPCode",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "token",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "access token returned from Auth"
            },
            {
              "Name": "id",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "player id as used in client's website"
            },
            {
              "Name": "device_token",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "access token returned from Device"
            },
            {
              "Name": "device_description",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "Device model description"
            },
            {
              "Name": "device_name",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "Device model name"
            },
            {
              "Name": "os_type",
              "Required": "N",
              "Default": "",
              "Type": "enumerated",
              "Description": "Choose os type",
              "EnumeratedList": [
                "IOS",
                "Android"
              ]
            }
          ]
        },
        {
          "MethodName": "Request OTP for setup phone",
          "Synopsis": "Request One time password for setup phone.",
          "HTTPMethod": "POST",
          "URI": "/Player/auth/:id/setupPhone",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "token",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "access token returned from Auth"
            },
            {
              "Name": "id",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "player id as used in client's website"
            },
            {
              "Name": "phone_number",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "+66xxyyyzzzz"
            },
            {
              "Name": "device_token",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "access token returned from Device"
            },
            {
              "Name": "device_description",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "Device model description"
            },
            {
              "Name": "device_name",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "Device model name"
            },
            {
              "Name": "os_type",
              "Required": "N",
              "Default": "",
              "Type": "enumerated",
              "Description": "Choose os type",
              "EnumeratedList": [
                "IOS",
                "Android"
              ]
            }
          ]
        },
        {
          "MethodName": "Perform OTP verification",
          "Synopsis": "Perform OTP verification from code that has sent to player SMS.",
          "HTTPMethod": "POST",
          "URI": "/Player/auth/:id/verifyOTPCode",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "token",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "access token returned from Auth"
            },
            {
              "Name": "id",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "player id as use in client's site"
            },
            {
              "Name": "code",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "OTP code as sent to player"
            }
          ]
        },
        {
          "MethodName": "Logout",
          "Synopsis": "Tell Playbasis system that a player has logged out.",
          "HTTPMethod": "POST",
          "URI": "/Player/:id/logout",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "token",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "access token returned from Auth"
            },
            {
              "Name": "id",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "player id as used in client's website"
            },
            {
              "Name": "session_id",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "session id of the player"
            }
          ]
        },
        {
          "MethodName": "List Active Player Sessions",
          "Synopsis": "List active sessions of a player in Playbasis system.",
          "HTTPMethod": "GET",
          "URI": "/Player/:id/sessions",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "id",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "player id as used in client's website"
            }
          ]
        },
        {
          "MethodName": "Find a Player by Session",
          "Synopsis": "Find a player given session ID.",
          "HTTPMethod": "GET",
          "URI": "/Player/session/:session_id",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "session_id",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "session id"
            }
          ]
        },
        {
          "MethodName": "Points",
          "Synopsis": "Returns information about all point-based rewards that a player currently have.",
          "HTTPMethod": "GET",
          "URI": "/Player/:id/points",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "id",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "player id as used in client's website"
            }
          ]
        },
        {
          "MethodName": "Point",
          "Synopsis": "Returns how much of specified the point-based reward a player currently have.",
          "HTTPMethod": "GET",
          "URI": "/Player/:id/point/:point_name",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "id",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "player id as used in client's website"
            },
            {
              "Name": "point_name",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "name of the point-based reward to query"
            }
          ]
        },
        {
          "MethodName": "Point History",
          "Synopsis": "Returns history points of player",
          "HTTPMethod": "GET",
          "URI": "/Player/:id/point_history",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "id",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "player id as used in client's website"
            },
            {
              "Name": "point_name",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "name of the point-based reward to query"
            },
            {
              "Name": "offset",
              "Required": "N",
              "Default": "0",
              "Type": "integer",
              "Description": "number of records starting"
            },
            {
              "Name": "limit",
              "Required": "N",
              "Default": "20",
              "Type": "integer",
              "Description": "number of results to return"
            },
            {
              "Name": "order",
              "Required": "N",
              "Default": "desc",
              "Type": "string",
              "Description": "Specify sorted direction [desc, *asc*]"
            }
          ]
        },
        {
          "MethodName": "Action Time",
          "Synopsis": "Returns the last time that player performed the specified action.",
          "HTTPMethod": "GET",
          "URI": "/Player/:id/action/:action_name/time",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "id",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "player id as used in client's website"
            },
            {
              "Name": "action_name",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "name of the action to query"
            }
          ]
        },
        {
          "MethodName": "Last Action",
          "Synopsis": "Returns the time and action that a player last performed.",
          "HTTPMethod": "GET",
          "URI": "/Player/:id/action/time",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "id",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "player id as used in client's website"
            }
          ]
        },
        {
          "MethodName": "Action Count",
          "Synopsis": "Returns the number of times that a player has performed the specified action.",
          "HTTPMethod": "GET",
          "URI": "/Player/:id/action/:action_name/count",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "id",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "player id as used in client's website"
            },
            {
              "Name": "action_name",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "name of the action to query"
            }
          ]
        },
        {
          "MethodName": "Level",
          "Synopsis": "Returns detail of level.",
          "HTTPMethod": "GET",
          "URI": "/Player/level/:level",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "level",
              "Required": "Y",
              "Default": "",
              "Type": "integer",
              "Description": "number of  level"
            }
          ]
        },
        {
          "MethodName": "Levels",
          "Synopsis": "Returns all detail of level.",
          "HTTPMethod": "GET",
          "URI": "/Player/levels",
          "RequiresOAuth": "N",
          "parameters": [
          ]
        },
        {
          "MethodName": "Badge",
          "Synopsis": "Returns information about all the badges that a player has earned.",
          "HTTPMethod": "GET",
          "URI": "/Player/:id/badge",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "id",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "player id as used in client's website"
            },
            {
              "Name": "tags",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "Specific tag(s) to find (e.g. foo,bar)"
            }
          ]
        },
        {
          "MethodName": "All Badges",
          "Synopsis": "Returns information about all the badges of the client as well as the amount that a player may earn.",
          "HTTPMethod": "GET",
          "URI": "/Player/:id/badgeAll",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "id",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "player id as used in client's website"
            },
            {
              "Name": "tags",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "Specific tag(s) to find (e.g. foo,bar)"
            }
          ]
        },
        {
          "MethodName": "Rank",
          "Synopsis": "Returns list of players sorted by the specified point type.",
          "HTTPMethod": "GET",
          "URI": "/Player/rank/:rank_by/:limit",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "rank_by",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "name of point-based reward to rank players by"
            },
            {
              "Name": "limit",
              "Required": "Y",
              "Default": "20",
              "Type": "integer",
              "Description": "number of results to return"
            },
            {
              "Name": "mode",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "weekly, monthly (default is all-time)"
            }
          ]
        },
        {
          "MethodName": "DEPRECATED - Level",
          "Synopsis": "Returns detail of level.",
          "HTTPMethod": "POST",
          "URI": "/Player/level/:level",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "token",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "access token returned from Auth"
            },
            {
              "Name": "level",
              "Required": "Y",
              "Default": "",
              "Type": "integer",
              "Description": "number of level"
            }
          ]
        },
        {
          "MethodName": "DEPRECATED - Levels",
          "Synopsis": "Returns all detail of level.",
          "HTTPMethod": "POST",
          "URI": "/Player/levels",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "token",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "access token returned from Auth"
            }
          ]
        },
        {
          "MethodName": "Ranks",
          "Synopsis": "Returns list of players sorted by each point type.",
          "HTTPMethod": "GET",
          "URI": "/Player/ranks/:limit",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "limit",
              "Required": "Y",
              "Default": "20",
              "Type": "integer",
              "Description": "number of results to return for each point type"
            },
            {
              "Name": "mode",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "weekly, monthly (default is all-time)"
            }
          ]
        },
        {
          "MethodName": "DEPRECATED - Ranks",
          "Synopsis": "Returns list of players sorted by each point type.",
          "HTTPMethod": "POST",
          "URI": "/Player/ranks/:limit",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "token",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "access token returned from Auth"
            },
            {
              "Name": "limit",
              "Required": "N",
              "Default": "20",
              "Type": "integer",
              "Description": "number of results to return for each point type"
            }
          ]
        },
        {
          "MethodName": "Goods",
          "Synopsis": "Returns information about all the goods list that a player has redeem.",
          "HTTPMethod": "GET",
          "URI": "/Player/:id/goods",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "id",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "player id as used in client's website"
            }
          ]
        },
        {
          "MethodName": "Quest of Player",
          "Synopsis": "Quest that the player has joined.",
          "HTTPMethod": "GET",
          "URI": "/Player/quest/:id",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "id",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "quest id as player need to join"
            },
            {
              "Name": "player_id",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "player id as used in client's website"
            },
            {
              "Name": "filter",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "fields to be included (comma ',' as delimiter)"
            }
          ]
        },
        {
          "MethodName": "Quest List of Player",
          "Synopsis": "List of quests that the player has joined.",
          "HTTPMethod": "GET",
          "URI": "/Player/quest",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "player_id",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "player id as used in client's website"
            },
            {
              "Name": "tags",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "Specific tag(s) to find (e.g. foo,bar)"
            },
            {
              "Name": "filter",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "fields to be included (comma ',' as delimiter)"
            }
          ]
        },
        {
          "MethodName": "All Quests of Player",
          "Synopsis": "List of all available quests of the client as well as the status of the player if joined.",
          "HTTPMethod": "GET",
          "URI": "/Player/questAll/:id",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "id",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "player id as used in client's website"
            }
          ]
        },
        {
          "MethodName": "Quest Reward History",
          "Synopsis": "Returns quest reward history of player",
          "HTTPMethod": "GET",
          "URI": "/Player/:id/quest_reward_history",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "id",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "player id as used in client's website"
            },
            {
              "Name": "offset",
              "Required": "N",
              "Default": "0",
              "Type": "integer",
              "Description": "number of records starting"
            },
            {
              "Name": "limit",
              "Required": "N",
              "Default": "50",
              "Type": "integer",
              "Description": "number of results to return"
            }
          ]
        },
        {
          "MethodName": "Deduct Reward",
          "Synopsis": "Deduct a reward from a given player.",
          "HTTPMethod": "POST",
          "URI": "/Player/:id/deduct",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "token",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "access token returned from Auth"
            },
            {
              "Name": "id",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "player id as used in client's website"
            },
            {
              "Name": "reward",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "the name of the reward"
            },
            {
              "Name": "amount",
              "Required": "Y",
              "Default": "",
              "Type": "number",
              "Description": "amount"
            },
            {
              "Name": "force",
              "Required": "N",
              "Default": "0",
              "Type": "number",
              "Description": "0 = not force if player has not enough reward to deduct, 1 = force to do the deduct (and player's reward becomes zero)"
            }
          ]
        },
        {
          "MethodName": "Gift",
          "Synopsis": "Unlock player for authentication",
          "HTTPMethod": "POST",
          "URI": "/Player/:sent_player_id/giveGift/:type",
          "RequiresOAuth": "Y",
          "parameters": [
            {
              "Name": "token",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "access token returned from Auth"
            },
            {
              "Name": "sent_player_id",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "player id as used in client's website"
            },
            {
              "Name": "received_player_id",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "player id as used in client's website"
            },
            {
              "Name": "gift_id",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "gift id can be badge id,goods id,custom_point id"
            },
            {
              "Name": "type",
              "Required": "Y",
              "Default": "BADGE",
              "Type": "enumerated",
              "Description": "type of gift",
              "EnumeratedList": [
                "BADGE",
                "CUSTOM_POINT",
                "GOODS"
              ]
            },
            {
              "Name": "amount",
              "Required": "Y",
              "Default": "",
              "Type": "integer",
              "Description": "gift amount"
            }
          ]
        },
        {
          "MethodName": "Player Referral Code",
          "Synopsis": "Returns generated referral code of player",
          "HTTPMethod": "GET",
          "URI": "/Player/:id/code",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "id",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "player id as used in client's website"
            }
          ]
        },
        {
          "MethodName": "Rank by Custom parameter",
          "Synopsis": "Returns list of players sorted by rising custom parameter",
          "HTTPMethod": "GET",
          "URI": "/Player/rankParam/:action/:parameter",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "action",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "action of parameter to rank players by"
            },
            {
              "Name": "parameter",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "name of parameter to rank players by"
            },
            {
              "Name": "limit",
              "Required": "N",
              "Default": "20",
              "Type": "integer",
              "Description": "number of results to return"
            },
            {
              "Name": "month",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "month to rank players by (01, 02, 03,..., 12)"
            },
            {
              "Name": "year",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "year to rank players by (2015, 2016 , ...)"
            }
          ]
        },
        {
          "MethodName": "Get Associated Node",
          "Synopsis": "Get associated node of player",
          "HTTPMethod": "GET",
          "URI": "/Player/:id/getAssociatedNode",
          "RequiresOAuth": "Y",
          "parameters": [
            {
              "Name": "id",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "player id as used in client's website"
            }
          ]
        },
        {
          "MethodName": "Get Role",
          "Synopsis": "Get role of player in specific node",
          "HTTPMethod": "GET",
          "URI": "/Player/:id/getRole/:node_id",
          "RequiresOAuth": "Y",
          "parameters": [
            {
              "Name": "id",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "player id as used in client's website"
            },
            {
              "Name": "node_id",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "Node Id to add player"
            }
          ]
        },
        {
          "MethodName": "Sale report",
          "Synopsis": "Sale report of any node that associated with the player",
          "HTTPMethod": "GET",
          "URI": "/Player/:id/saleReport",
          "RequiresOAuth": "Y",
          "parameters": [
            {
              "Name": "id",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "player id as used in client's website"
            },
            {
              "Name": "month",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "Select month to get sale report(ex. 1,2,..,12)[default = current month]"
            },
            {
              "Name": "year",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "Select year to get sale report(ex. 2015)[default = current year]"
            },
            {
              "Name": "action",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "Select action name to query from action log [default = \"sell\"]"
            },
            {
              "Name": "parameter",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "Select parameter to report from action log [default = \"amount\"]"
            }
          ]
        },
        {
          "MethodName": "Action report",
          "Synopsis": "Action report of specific Player",
          "HTTPMethod": "GET",
          "URI": "/Player/:player_id/actionReport",
          "RequiresOAuth": "Y",
          "parameters": [
            {
              "Name": "player_id",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "player id as used in client's website"
            },
            {
              "Name": "month",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "Select month to get sale report(ex. 1,2,..,12)[default = current month]"
            },
            {
              "Name": "year",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "Select year to get sale report(ex. 2015)[default = current year]"
            },
            {
              "Name": "count",
              "Required": "N",
              "Default": "",
              "Type": "number",
              "Description": "Number of months to get the report [default = 1 month]"
            },
            {
              "Name": "action",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "Select action name to query from action log [default = \"sell\"]"
            },
            {
              "Name": "parameter",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "Select parameter to report from action log [default = \"amount\"]"
            }
          ]
        },
        {
          "MethodName": "Unlock",
          "Synopsis": "Unlock player for authentication",
          "HTTPMethod": "POST",
          "URI": "/Player/:id/unlock",
          "RequiresOAuth": "Y",
          "parameters": [
            {
              "Name": "token",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "access token returned from Auth"
            },
            {
              "Name": "id",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "player id as used in client's website"
            }
          ]
        }
      ]
    },
    {
      "name": "Badge API",
      "methods": [
        {
          "MethodName": "Badges Info",
          "Synopsis": "Returns information about all available badges for the current site.",
          "HTTPMethod": "GET",
          "URI": "/Badges",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "tags",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "Specific tag(s) to find (e.g. foo,bar)"
            }
          ]
        },
        {
          "MethodName": "Badge Info",
          "Synopsis": "Returns information about the badge with the specified id.",
          "HTTPMethod": "GET",
          "URI": "/Badge/:id",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "id",
              "Required": "Y",
              "Default": "",
              "Type": "integer",
              "Description": "badge id to query"
            }
          ]
        }
      ]
    },
    {
      "name": "Goods API",
      "methods": [
        {
          "MethodName": "Goods List Info",
          "Synopsis": "Returns information about all available goods for the current site.",
          "HTTPMethod": "GET",
          "URI": "/Goods",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "player_id",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "player id as used in client's website"
            },
            {
              "Name": "tags",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "Specific tag(s) to find (e.g. foo,bar)"
            }
          ]
        },
        {
          "MethodName": "Goods Info",
          "Synopsis": "Returns information about the goods with the specified id.",
          "HTTPMethod": "GET",
          "URI": "/Goods/:id",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "id",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "goods id to query"
            },
            {
              "Name": "player_id",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "player id as used in client's website"
            }
          ]
        },
        {
          "MethodName": "Goods Group Available",
          "Synopsis": "Find number of available Goods given group.",
          "HTTPMethod": "GET",
          "URI": "/Redeem/goodsGroup",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "player_id",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "player id as used in client's website"
            },
            {
              "Name": "group",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "goods group"
            },
            {
              "Name": "amount",
              "Required": "N",
              "Default": "",
              "Type": "integer",
              "Description": "amount of the goods to redeem"
            }
          ]
        },
        {
          "MethodName": "Sponsored Goods List Info",
          "Synopsis": "Returns information about all available sponsored goods.",
          "HTTPMethod": "GET",
          "URI": "/Goods/sponsor",
          "RequiresOAuth": "N",
          "parameters": []
        },
        {
          "MethodName": "Sponsored Goods Info",
          "Synopsis": "Returns information about the sponsored goods with the specified id.",
          "HTTPMethod": "GET",
          "URI": "/Goods/sponsor/:id",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "id",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "goods id to query"
            }
          ]
        },
        {
          "MethodName": "Sponsored Goods Group Available",
          "Synopsis": "Find number of available sponsored Goods given group.",
          "HTTPMethod": "GET",
          "URI": "/Redeem/sponsorGroup",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "player_id",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "player id as used in client's website"
            },
            {
              "Name": "group",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "goods group"
            },
            {
              "Name": "amount",
              "Required": "N",
              "Default": "",
              "Type": "integer",
              "Description": "amount of the goods to redeem"
            }
          ]
        },
        {
          "MethodName": "Coupon code verification",
          "Synopsis": "verify coupon code available.",
          "HTTPMethod": "GET",
          "URI": "/Goods/couponVerify",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "goods_id",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "goods id"
            },
            {
              "Name": "coupon_code",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "coupon code of goods to verify"
            },
            {
              "Name": "player_id",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "player id as used in client's website"
            }
          ]
        },
        {
          "MethodName": "Coupon code verification with redeem",
          "Synopsis": "verify coupon code available and redeem.",
          "HTTPMethod": "POST",
          "URI": "/Goods/couponVerify",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "token",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "access token returned from Auth"
            },
            {
              "Name": "goods_id",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "goods id"
            },
            {
              "Name": "coupon_code",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "coupon code of goods to verify"
            },
            {
              "Name": "player_id",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "player id as used in client's website"
            }
          ]
        }
      ]
    },
    {
      "name": "Merchant API",
      "methods": [
        {
          "MethodName": "Available Branch for Goods Group",
          "Synopsis": "Returns list of available branch for goods group.",
          "HTTPMethod": "GET",
          "URI": "/Merchant/availableBranchGoodsGroup",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "goods_group",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "name of goods group"
            }
          ]
        }]
    },
    {
      "name": "Engine API",
      "methods": [
        {
          "MethodName": "List Rules",
          "Synopsis": "Returns list of active game rules defined for a client’s website.",
          "HTTPMethod": "GET",
          "URI": "/Engine/rules",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "action",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "name of action performed"
            },
            {
              "Name": "player_id",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "player id as used in client's website"
            }
          ]
        },
        {
          "MethodName": "Rule Detail",
          "Synopsis": "Get the detail of the rule.",
          "HTTPMethod": "GET",
          "URI": "/Engine/rule/:id",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "id",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "rule id"
            },
            {
              "Name": "player_id",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "player id as used in client's website"
            }
          ]
        },
        {
          "MethodName": "Rule",
          "Synopsis": "Process an action through all the game rules defined for a client’s website.",
          "HTTPMethod": "POST",
          "URI": "/Engine/rule",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "token",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "access token returned from Auth"
            },
            {
              "Name": "action",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "name of action performed"
            },
            {
              "Name": "player_id",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "player id as used in client's website"
            },
            {
              "Name": "url",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "URL of the page that trigger the action or any identifier string - Used for logging, URL specific rules, and rules that trigger only when a specific identifier string is supplied"
            },
            {
              "Name": "reward",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "name of the point-based reward to give to player, if the action trigger custom-point reward that doesn't specify reward name"
            },
            {
              "Name": "quantity",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "amount of the point-based reward to give to player, if the action trigger custom-point reward that doesn't specify reward quantity"
            },
            {
              "Name": "rule_id",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "if needed, you can also specify a rule id so that rule engine will only process against that rule"
            },
            {
              "Name": "node_id",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "if needed, you can also specify a node id so that rule engine will process with that rule"
            },
            {
              "Name": "session_id",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "you can specify a session id to extend expire session time for that player"
            }
          ]
        }
      ]
    },
    {
      "name": "Quest API",
      "methods": [
        {
          "MethodName": "Quest List Info",
          "Synopsis": "Returns information about all quest for the current site.",
          "HTTPMethod": "GET",
          "URI": "/Quest",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "tags",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "Specific tag(s) to find (e.g. foo,bar)"
            }
          ]
        },
        {
          "MethodName": "Quest Info",
          "Synopsis": "Returns information about the quest with the specified id.",
          "HTTPMethod": "GET",
          "URI": "/Quest/:id",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "id",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "quest id to query"
            }
          ]
        },
        {
          "MethodName": "Mission Info",
          "Synopsis": "Returns information about the mission with the specified id.",
          "HTTPMethod": "GET",
          "URI": "/Quest/:id/mission/:mission_id",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "id",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "quest id to query"
            },
            {
              "Name": "mission_id",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "mission id to query"
            }
          ]
        },
        {
          "MethodName": "Quest List Available For Player",
          "Synopsis": "Returns information about list of quest is available for player.",
          "HTTPMethod": "GET",
          "URI": "/Quest/available",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "player_id",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "player id as used in client's website"
            }
          ]
        },
        {
          "MethodName": "Quest Available For Player",
          "Synopsis": "Returns information about the quest is available for player.",
          "HTTPMethod": "GET",
          "URI": "/Quest/:id/available",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "id",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "quest id to query"
            },
            {
              "Name": "player_id",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "player id as used in client's website"
            }
          ]
        },
        {
          "MethodName": "Join Quest",
          "Synopsis": "Player join quest.",
          "HTTPMethod": "POST",
          "URI": "/Quest/:id/join",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "token",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "access token returned from Auth"
            },
            {
              "Name": "id",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "quest id as player need to join"
            },
            {
              "Name": "player_id",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "player id as used in client's website"
            }
          ]
        },
        {
          "MethodName": "Join All Quests",
          "Synopsis": "Player join all available quests.",
          "HTTPMethod": "POST",
          "URI": "/Quest/joinAll",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "token",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "access token returned from Auth"
            },
            {
              "Name": "player_id",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "player id as used in client's website"
            }
          ]
        },
        {
          "MethodName": "Cancel Quest",
          "Synopsis": "Player cancel quest.",
          "HTTPMethod": "POST",
          "URI": "/Quest/:id/cancel",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "token",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "access token returned from Auth"
            },
            {
              "Name": "id",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "quest id as player need to join"
            },
            {
              "Name": "player_id",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "player id as used in client's website"
            }
          ]
        },
        {
          "MethodName": "Reset a Player's Quest",
          "Synopsis": "Reset a quest done by a player.",
          "HTTPMethod": "POST",
          "URI": "/Quest/reset",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "token",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "access token returned from Auth"
            },
            {
              "Name": "player_id",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "player id as used in client's website"
            },
            {
              "Name": "quest_id",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "quest id"
            }
          ]
        },
        {
          "MethodName": "Quest Leader Board",
          "Synopsis": "Quest Leader Board",
          "HTTPMethod": "GET",
          "URI": "/Quest/leader",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "quest_id",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "quest id"
            },
            {
              "Name": "completion_element_id",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "quest complete element id"
            },
            {
              "Name": "player_id",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "player id as used in client's website"
            },
            {
              "Name": "offset",
              "Required": "N",
              "Default": "0",
              "Type": "integer",
              "Description": "number of records starting"
            },
            {
              "Name": "limit",
              "Required": "N",
              "Default": "20",
              "Type": "integer",
              "Description": "number of results to return"
            },
            {
              "Name": "status",
              "Required": "N",
              "Default": "",
              "Type": "enumerated",
              "Description": "status of quest, default is all",
              "EnumeratedList": [
                "finish",
                "join"
              ]
            }
          ]
        }
      ]
    },
    {
      "name": "Quiz API",
      "methods": [
        {
          "MethodName": "A List of Active Quizzes",
          "Synopsis": "Returns a list of active quizzes.",
          "HTTPMethod": "GET",
          "URI": "/Quiz/list",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "player_id",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "player id as used in client's website"
            },
            {
              "Name": "type",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "quiz, poll"
            },
            {
              "Name": "tags",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "Specific tag(s) to find (e.g. foo,bar)"
            }
          ]
        },
        {
          "MethodName": "Get Detail of a Quiz",
          "Synopsis": "Get detail of a quiz.",
          "HTTPMethod": "GET",
          "URI": "/Quiz/:id/detail",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "id",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "quiz id"
            },
            {
              "Name": "player_id",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "player id as used in client's website"
            }
          ]
        },
        {
          "MethodName": "Random Get a Quiz for a Player",
          "Synopsis": "Randomly get one quiz of a list of active quizzes for a given player.",
          "HTTPMethod": "GET",
          "URI": "/Quiz/random/",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "player_id",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "player id as used in client's website"
            },
            {
              "Name": "type",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "quiz, poll"
            },
            {
              "Name": "tags",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "Specific tag(s) to find (e.g. foo,bar)"
            }
          ]
        },
        {
          "MethodName": "List Recent Quizzes Done by the Player",
          "Synopsis": "List recent quizzes done by the player.",
          "HTTPMethod": "GET",
          "URI": "/Quiz/player/:player_id/:limit",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "player_id",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "player id as used in client's website"
            },
            {
              "Name": "limit",
              "Required": "Y",
              "Default": "5",
              "Type": "string",
              "Description": "limit number of quizzes"
            }
          ]
        },
        {
          "MethodName": "List Pending Quizzes by the Player",
          "Synopsis": "List pending quizzes by the player.",
          "HTTPMethod": "GET",
          "URI": "/Quiz/player/:player_id/pending/:limit",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "player_id",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "player id as used in client's website"
            },
            {
              "Name": "limit",
              "Required": "Y",
              "Default": "5",
              "Type": "string",
              "Description": "limit number of quizzes"
            }
          ]
        },
        {
          "MethodName": "Get a Question from a Quiz",
          "Synopsis": "Get a question with a list of options for a given quiz.",
          "HTTPMethod": "GET",
          "URI": "/Quiz/:id/question",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "id",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "quiz id"
            },
            {
              "Name": "player_id",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "player id as used in client's website"
            },
            {
              "Name": "question_id",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "question id in quiz"
            },
            {
              "Name": "random",
              "Required": "N",
              "Default": "",
              "Type": "enumerated",
              "Description": "1=Random, 2=Not Random",
              "EnumeratedList": [
                "1",
                "2"
              ]
            }
          ]
        },
        {
          "MethodName": "Get a Question from a Quiz with reset timestamp",
          "Synopsis": "Get a question with a list of options for a given quiz and reset timestamp.",
          "HTTPMethod": "POST",
          "URI": "/Quiz/:id/question",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "token",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "access token returned from Auth"
            },
            {
              "Name": "id",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "quiz id"
            },
            {
              "Name": "player_id",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "player id as used in client's website"
            },
            {
              "Name": "question_id",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "question id in quiz"
            },
            {
              "Name": "random",
              "Required": "N",
              "Default": "",
              "Type": "enumerated",
              "Description": "1=Random, 2=Not Random",
              "EnumeratedList": [
                "1",
                "2"
              ]
            }
          ]
        },
        {
          "MethodName": "Answer a Question from a Quiz",
          "Synopsis": "Submit a player's answer for a question for a given quiz.",
          "HTTPMethod": "POST",
          "URI": "/Quiz/:id/answer",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "token",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "access token returned from Auth"
            },
            {
              "Name": "id",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "quiz id"
            },
            {
              "Name": "player_id",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "player id as used in client's website"
            },
            {
              "Name": "question_id",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "question id"
            },
            {
              "Name": "option_id",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "option id"
            }
          ]
        },
        {
          "MethodName": "Rank Players by Their Scores for a Quiz",
          "Synopsis": "Rank players by their scores for a give quiz.",
          "HTTPMethod": "GET",
          "URI": "/Quiz/:id/rank/:limit",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "id",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "quiz id"
            },
            {
              "Name": "limit",
              "Required": "Y",
              "Default": "5",
              "Type": "string",
              "Description": "limit number of players"
            }
          ]
        },
        {
          "MethodName": "Query for Quiz's Statistics",
          "Synopsis": "Query a statistics of a quiz done by all players.",
          "HTTPMethod": "GET",
          "URI": "/Quiz/:id/stat",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "id",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "quiz id"
            }
          ]
        },
        {
          "MethodName": "Reset a Player's Quiz",
          "Synopsis": "Reset a quiz done by a player.",
          "HTTPMethod": "POST",
          "URI": "/Quiz/reset",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "token",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "access token returned from Auth"
            },
            {
              "Name": "player_id",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "player id as used in client's website"
            },
            {
              "Name": "quiz_id",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "quiz id"
            }
          ]
        }
      ]
    },
    {
      "name": "Redeem API",
      "methods": [
        {
          "MethodName": "Redeem",
          "Synopsis": "Redeem Goods for a client’s website.",
          "HTTPMethod": "POST",
          "URI": "/Redeem/goods",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "token",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "access token returned from Auth"
            },
            {
              "Name": "goods_id",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "goods id of goods store"
            },
            {
              "Name": "player_id",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "player id as used in client's website"
            },
            {
              "Name": "amount",
              "Required": "N",
              "Default": "",
              "Type": "integer",
              "Description": "amount of the goods to give to player"
            }
          ]
        },
        {
          "MethodName": "Redeem Goods Group",
          "Synopsis": "Redeem Goods given group.",
          "HTTPMethod": "POST",
          "URI": "/Redeem/goodsGroup",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "token",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "access token returned from Auth"
            },
            {
              "Name": "player_id",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "player id as used in client's website"
            },
            {
              "Name": "group",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "goods group"
            },
            {
              "Name": "amount",
              "Required": "N",
              "Default": "",
              "Type": "integer",
              "Description": "amount of the goods to redeem"
            }
          ]
        },
        {
          "MethodName": "Redeem Verification",
          "Synopsis": "Redeem verification for merchant using PIN code",
          "HTTPMethod": "POST",
          "URI": "/Redeem/goodsGroup/verify",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "token",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "access token returned from Auth"
            },
            {
              "Name": "goods_group",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "goods group"
            },
            {
              "Name": "coupon_code",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "coupon code of goods to verify"
            },
            {
              "Name": "pin_code",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "merchant PIN Code generated from admin dashboard"
            }
          ]
        },
        {
          "MethodName": "Redeem Sponsor",
          "Synopsis": "Redeem Sponsor Goods for a client’s website.",
          "HTTPMethod": "POST",
          "URI": "/Redeem/sponsor",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "token",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "access token returned from Auth"
            },
            {
              "Name": "goods_id",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "goods id of goods store"
            },
            {
              "Name": "player_id",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "player id as used in client's website"
            },
            {
              "Name": "amount",
              "Required": "N",
              "Default": "",
              "Type": "integer",
              "Description": "amount of the goods to give to player"
            }
          ]
        },
        {
          "MethodName": "Redeem Sponsored Goods Group",
          "Synopsis": "Redeem Sponsored Goods given group.",
          "HTTPMethod": "POST",
          "URI": "/Redeem/sponsorGroup",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "token",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "access token returned from Auth"
            },
            {
              "Name": "player_id",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "player id as used in client's website"
            },
            {
              "Name": "group",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "goods group"
            },
            {
              "Name": "amount",
              "Required": "N",
              "Default": "",
              "Type": "integer",
              "Description": "amount of the goods to redeem"
            }
          ]
        }
      ]
    },
    {
      "name": "Communication API",
      "methods": [
        {
          "MethodName": "Send Email",
          "Synopsis": "Send email to a player.",
          "HTTPMethod": "POST",
          "URI": "/Email/send",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "token",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "access token returned from Auth"
            },
            {
              "Name": "player_id",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "player id as used in client's website"
            },
            {
              "Name": "subject",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "email subject"
            },
            {
              "Name": "message",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "email message (either message or template_id is required)"
            },
            {
              "Name": "template_id",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "template message (either message or template_id is required)"
            }
          ]
        },
        {
          "MethodName": "Send Email Coupon",
          "Synopsis": "Send coupon to a player via email.",
          "HTTPMethod": "POST",
          "URI": "/Email/goods",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "token",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "access token returned from Auth"
            },
            {
              "Name": "player_id",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "player id as used in client's website"
            },
            {
              "Name": "ref_id",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "reference transaction id for redemption"
            },
            {
              "Name": "subject",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "email subject"
            },
            {
              "Name": "message",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "email message, can use variable {{coupon}} for the actual code"
            },
            {
              "Name": "template_id",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "template message (either message or template_id is required)"
            }
          ]
        },
        {
          "MethodName": "List Recent Email Sent to a Player",
          "Synopsis": "List recent email sent to a player.",
          "HTTPMethod": "GET",
          "URI": "/Email/recent",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "player_id",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "player id as used in client's website"
            },
            {
              "Name": "since",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "'datetime' format supported by strtotime"
            }
          ]
        },
        {
          "MethodName": "List Email Template",
          "Synopsis": "List email template.",
          "HTTPMethod": "GET",
          "URI": "/Email/template",
          "RequiresOAuth": "N",
          "parameters": [
          ]
        },
        {
          "MethodName": "Get Processed Email Template",
          "Synopsis": "Get processed email template.",
          "HTTPMethod": "GET",
          "URI": "/Email/template/:template_id",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "template_id",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "template message"
            },
            {
              "Name": "player_id",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "player id as used in client's website"
            }
          ]
        },
        {
          "MethodName": "Send SMS",
          "Synopsis": "Send SMS to a player.",
          "HTTPMethod": "POST",
          "URI": "/Sms/send",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "token",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "access token returned from Auth"
            },
            {
              "Name": "player_id",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "player id as used in client's website"
            },
            {
              "Name": "message",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "SMS message (either message or template_id is required)"
            },
            {
              "Name": "template_id",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "template message (either message or template_id is required)"
            }
          ]
        },
        {
          "MethodName": "Send SMS Coupon",
          "Synopsis": "Send coupon to a player via SMS.",
          "HTTPMethod": "POST",
          "URI": "/Sms/goods",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "token",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "access token returned from Auth"
            },
            {
              "Name": "player_id",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "player id as used in client's website"
            },
            {
              "Name": "ref_id",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "reference transaction id for redemption"
            },
            {
              "Name": "message",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "SMS message, can use variable {{coupon}} for the actual code"
            },
            {
              "Name": "template_id",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "template message (either message or template_id is required)"
            }
          ]
        },
        {
          "MethodName": "List Recent SMS Sent to a Player",
          "Synopsis": "List recent SMS sent to a player.",
          "HTTPMethod": "GET",
          "URI": "/Sms/recent",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "player_id",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "player id as used in client's website"
            },
            {
              "Name": "since",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "'datetime' format supported by strtotime"
            }
          ]
        },
        {
          "MethodName": "List SMS Template",
          "Synopsis": "List SMS template.",
          "HTTPMethod": "GET",
          "URI": "/Sms/template",
          "RequiresOAuth": "N",
          "parameters": [
          ]
        },
        {
          "MethodName": "Get Processed SMS Template",
          "Synopsis": "Get processed SMS template.",
          "HTTPMethod": "GET",
          "URI": "/Sms/template/:template_id",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "template_id",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "template message"
            },
            {
              "Name": "player_id",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "player id as used in client's website"
            }
          ]
        },
        {
          "MethodName": "Device Registration",
          "Synopsis": "Register for your device ",
          "HTTPMethod": "POST",
          "URI": "/Push/deviceRegistration",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "player_id",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "player id"
            },
            {
              "Name": "token",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "access token returned from Auth"
            },
            {
              "Name": "device_token",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "access token returned from Device"
            },
            {
              "Name": "device_description",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "Device model description"
            },
            {
              "Name": "device_name",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "Device model name"
            },
            {
              "Name": "os_type",
              "Required": "Y",
              "Default": "",
              "Type": "enumerated",
              "Description": "Choose os type",
              "EnumeratedList": [
                "IOS",
                "Android"
              ]
            }
          ]
        },
        {
          "MethodName": "Device Deregistration",
          "Synopsis": "Deregister for your device ",
          "HTTPMethod": "POST",
          "URI": "/Push/deviceDeRegistration",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "token",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "access token returned from Auth"
            },
            {
              "Name": "player_id",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "player id [player id or device token is required]"
            },
            {
              "Name": "device_token",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "access token returned from Device [player id or device token is required]"
            }
          ]
        },
        {
          "MethodName": "Send Push-Notification",
          "Synopsis": "Send push notification to a player.",
          "HTTPMethod": "POST",
          "URI": "/Push/send",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "token",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "access token returned from Auth"
            },
            {
              "Name": "player_id",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "player id as used in client's website"
            },
            {
              "Name": "message",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "SMS message (either message or template_id is required)"
            },
            {
              "Name": "template_id",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "template message (either message or template_id is required)"
            }
          ]
        },
        {
          "MethodName": "Send Push-Notification Coupon",
          "Synopsis": "Send coupon to a player via push notification.",
          "HTTPMethod": "POST",
          "URI": "/Push/goods",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "token",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "access token returned from Auth"
            },
            {
              "Name": "player_id",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "player id as used in client's website"
            },
            {
              "Name": "ref_id",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "reference transaction id for redemption"
            },
            {
              "Name": "message",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "SMS message, can use variable {{coupon}} for the actual code"
            },
            {
              "Name": "template_id",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "template message (either message or template_id is required)"
            }
          ]
        },
        {
          "MethodName": "List Recent Push Notification to a Player",
          "Synopsis": "List recent Push Notification to a player.",
          "HTTPMethod": "GET",
          "URI": "/Push/recent",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "player_id",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "player id as used in client's website"
            },
            {
              "Name": "since",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "'datetime' format supported by strtotime"
            }
          ]
        },
        {
          "MethodName": "List Push Notification Template",
          "Synopsis": "List Push template.",
          "HTTPMethod": "GET",
          "URI": "/Push/template",
          "RequiresOAuth": "N",
          "parameters": [
          ]
        },
        {
          "MethodName": "Get Processed Push Notification Template",
          "Synopsis": "Get processed Push Notification template.",
          "HTTPMethod": "GET",
          "URI": "/Push/template/:template_id",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "template_id",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "template message"
            },
            {
              "Name": "player_id",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "player id as used in client's website"
            }
          ]
        }
      ]
    },
    {
      "name": "Live Feed API",
      "methods": [
        {
          "MethodName": "Recent Activities",
          "Synopsis": "Returns recent activities",
          "HTTPMethod": "GET",
          "URI": "/Service/recentActivities",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "player_id",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "player id as used in client's website (required when mode='player')"
            },
            {
              "Name": "offset",
              "Required": "N",
              "Default": "0",
              "Type": "integer",
              "Description": "number of records starting"
            },
            {
              "Name": "limit",
              "Required": "N",
              "Default": "20",
              "Type": "integer",
              "Description": "number of results to return"
            },
            {
              "Name": "last_read_activity_id",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "last activity id that you have read"
            },
            {
              "Name": "mode",
              "Required": "N",
              "Default": "all",
              "Type": "string",
              "Description": "specify 'all' or 'player' (default is 'all')"
            }
          ]
        },
        {
          "MethodName": "Detail Activity",
          "Synopsis": "Get detail activity",
          "HTTPMethod": "GET",
          "URI": "/Service/detailActivityFeed/:activity_id",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "activity_id",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "id of the activity"
            }
          ]
        },
        {
          "MethodName": "Like Activity",
          "Synopsis": "Like activity",
          "HTTPMethod": "POST",
          "URI": "/Service/likeActivityFeed/:activity_id",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "token",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "access token returned from Auth"
            },
            {
              "Name": "activity_id",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "id of the activity"
            },
            {
              "Name": "player_id",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "player id as used in client's website"
            }
          ]
        },
        {
          "MethodName": "Comment Activity",
          "Synopsis": "Comment activity",
          "HTTPMethod": "POST",
          "URI": "/Service/commentActivityFeed/:activity_id",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "token",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "access token returned from Auth"
            },
            {
              "Name": "activity_id",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "id of the activity"
            },
            {
              "Name": "player_id",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "player id as used in client's website"
            },
            {
              "Name": "message",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "comment message"
            }
          ]
        }
      ]
    },
    {
      "name": "Service API",
      "methods": [
        {
          "MethodName": "Recent Point",
          "Synopsis": "Returns recent points",
          "HTTPMethod": "GET",
          "URI": "/Service/recent_point",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "point_name",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "name of the point-based reward to query"
            },
            {
              "Name": "offset",
              "Required": "N",
              "Default": "0",
              "Type": "integer",
              "Description": "number of records starting"
            },
            {
              "Name": "limit",
              "Required": "N",
              "Default": "20",
              "Type": "integer",
              "Description": "number of results to return"
            }
          ]
        },
        {
          "MethodName": "Reset Point",
          "Synopsis": "Reset point of all players",
          "HTTPMethod": "POST",
          "URI": "/Service/reset_point",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "token",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "access token returned from Auth"
            },
            {
              "Name": "point_name",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "name of the point-based reward to query"
            }
          ]
        }
      ]
    },
    {
      "name": "Store Organize API",
      "methods": [
        {
          "MethodName": "List organizations",
          "Synopsis": "List organizations as set from admin dashboard",
          "HTTPMethod": "get",
          "URI": "/StoreOrg/organizes",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "id",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "Specify Organize Id to retrieve"
            },
            {
              "Name": "search",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "Specify organize name to search"
            },
            {
              "Name": "sort",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "Specify field to be sorted [_id, *name*, status, description, date_added, date_modified]"
            },
            {
              "Name": "order",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "Specify sorted direction [desc, *asc*]"
            },
            {
              "Name": "offset",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "Specify paging offset [default = 0]"
            },
            {
              "Name": "limit",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "Specify paging limit [default = 20]"
            }
          ]
        },
        {
          "MethodName": "List nodes",
          "Synopsis": "List nodes as set from admin dashboard",
          "HTTPMethod": "get",
          "URI": "/StoreOrg/nodes",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "id",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "Specify Node Id to retrieve"
            },
            {
              "Name": "organize_id",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "Specify Organize Id to retrieve"
            },
            {
              "Name": "parent_id",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "Specify Parent Id to retrieve"
            },
            {
              "Name": "search",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "Specify organize name to search"
            },
            {
              "Name": "sort",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "Specify field to be sorted [_id, *name*, status, description, date_added, date_modified]"
            },
            {
              "Name": "order",
              "Required": "N",
              "Default": "asc",
              "Type": "string",
              "Description": "Specify sorted direction [desc, *asc*]"
            },
            {
              "Name": "offset",
              "Required": "N",
              "Default": "0",
              "Type": "string",
              "Description": "Specify paging offset [default = 0]"
            },
            {
              "Name": "limit",
              "Required": "N",
              "Default": "20",
              "Type": "string",
              "Description": "Specify paging limit [default = 20]"
            }
          ]
        },
        {
          "MethodName": "Add player to Node",
          "Synopsis": "Add player to specific Node",
          "HTTPMethod": "POST",
          "URI": "/StoreOrg/nodes/:node_id/addPlayer/:player_id",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "token",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "access token returned from Auth"
            },
            {
              "Name": "node_id",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "Node Id to add player"
            },
            {
              "Name": "player_id",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "Player Id to add to Node"
            }
          ]
        },
        {
          "MethodName": "Remove player from Node",
          "Synopsis": "Remove Player from specific Node",
          "HTTPMethod": "POST",
          "URI": "/StoreOrg/nodes/:node_id/removePlayer/:player_id",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "token",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "access token returned from Auth"
            },
            {
              "Name": "node_id",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "Node Id to add player"
            },
            {
              "Name": "player_id",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "Player Id to add to Node"
            }
          ]
        },
        {
          "MethodName": "Set player role",
          "Synopsis": "Set player's organization role to specific Node",
          "HTTPMethod": "POST",
          "URI": "/StoreOrg/nodes/:node_id/setPlayerRole/:player_id",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "token",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "access token returned from Auth"
            },
            {
              "Name": "node_id",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "Node Id to set player's role"
            },
            {
              "Name": "player_id",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "Player Id to set player's role"
            },
            {
              "Name": "role",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "Role name to set player's role"
            }
          ]
        },
        {
          "MethodName": "Unset player role",
          "Synopsis": "Unset player's organization role from specific Node",
          "HTTPMethod": "POST",
          "URI": "/StoreOrg/nodes/:node_id/unsetPlayerRole/:player_id",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "token",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "access token returned from Auth"
            },
            {
              "Name": "node_id",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "Node Id to unset player's role"
            },
            {
              "Name": "player_id",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "Player Id to unset player's role"
            },
            {
              "Name": "role",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "Role name to unset player's role"
            }
          ]
        },
        {
          "MethodName": "Get Players list from node id",
          "Synopsis": "get player's list from specific Node",
          "HTTPMethod": "GET",
          "URI": "/StoreOrg/players/:node_id",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "node_id",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "Node Id to unset player's role"
            },
            {
              "Name": "role",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "Role name to unset player's role"
            }
          ]
        },
        {
          "MethodName": "Peer Leader board",
          "Synopsis": "Returns leader board list for organization under given node_id",
          "HTTPMethod": "GET",
          "URI": "/StoreOrg/rankPeer/:node_id/:rank_by",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "node_id",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "organization id to be ranked"
            },
            {
              "Name": "rank_by",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "name of point-based reward to rank players by"
            },
            {
              "Name": "page",
              "Required": "N",
              "Default": "0",
              "Type": "number",
              "Description": "Select page to be reported, page 1 is the first page [default = first page]"
            },
            {
              "Name": "limit",
              "Required": "N",
              "Default": "20",
              "Type": "integer",
              "Description": "number of results to return [default = 20]"
            },
            {
              "Name": "under_org",
              "Required": "N",
              "Default": "false",
              "Type": "string",
              "Description": "true = return rank of organize under given node_id, false = return rank associate with given node_id"
            },
            {
              "Name": "role",
              "Required": "N",
              "Default": "",
              "Type": "String",
              "Description": "role to be filtered"
            },
            {
              "Name": "player_id",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "player_id to return his/her own rank"
            },
            {
              "Name": "month",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "month to rank players by (01, 02, 03,..., 12)"
            },
            {
              "Name": "year",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "year to rank players by (2015, 2016 , ...)"
            }
          ]
        },
        {
          "MethodName": "Peer Leader board By Action",
          "Synopsis": "Returns leader board list for organization under given node_id",
          "HTTPMethod": "GET",
          "URI": "/StoreOrg/rankPeerByAccAction/:node_id/:action/:parameter",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "node_id",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "organization id to be ranked"
            },
            {
              "Name": "action",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "name of action to rank players by"
            },
            {
              "Name": "parameter",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "name of parameter of action to rank players by"
            },
            {
              "Name": "role",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "role in organization to be filtered"
            },
            {
              "Name": "page",
              "Required": "N",
              "Default": "0",
              "Type": "number",
              "Description": "Select page to be reported, page 1 is the first page [default = first page]"
            },
            {
              "Name": "limit",
              "Required": "N",
              "Default": "20",
              "Type": "integer",
              "Description": "number of results to return [default = 20]"
            },
            {
              "Name": "player_id",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "player id to return his/her own rank"
            },
            {
              "Name": "month",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "month to rank players by (01, 02, 03,..., 12)"
            },
            {
              "Name": "year",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "year to rank players by (2015, 2016 , ...)"
            }
          ]
        },
        {
          "MethodName": "Find child nodes",
          "Synopsis": "Find all child nodes under specific Node",
          "HTTPMethod": "GET",
          "URI": "/StoreOrg/nodes/:node_id/getChildNode/:layer",
          "RequiresOAuth": "Y",
          "parameters": [
            {
              "Name": "node_id",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "Node Id that you want to find the child node"
            },
            {
              "Name": "layer",
              "Required": "N",
              "Default": "",
              "Type": "number",
              "Description": "Layer of nodes under specific node to find [default = 0 (for finding all layer)]"
            }
          ]
        },
        {
          "MethodName": "Sale report",
          "Synopsis": "Sale report of specific Node in a month",
          "HTTPMethod": "GET",
          "URI": "/StoreOrg/nodes/:node_id/saleReport",
          "RequiresOAuth": "Y",
          "parameters": [
            {
              "Name": "node_id",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "Node Id that you want to find the child node"
            },
            {
              "Name": "month",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "Select month to get sale report(ex. 1,2,..,12)[default = current month]"
            },
            {
              "Name": "year",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "Select year to get sale report(ex. 2015)[default = current year]"
            },
            {
              "Name": "action",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "Select action name to query from action log [default = \"sell\"]"
            },
            {
              "Name": "parameter",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "Select parameter to report from action log [default = \"amount\"]"
            }
          ]
        },
        {
          "MethodName": "Sale history",
          "Synopsis": "Sale history of specific Node",
          "HTTPMethod": "GET",
          "URI": "/StoreOrg/nodes/:node_id/saleHistory/:count",
          "RequiresOAuth": "Y",
          "parameters": [
            {
              "Name": "node_id",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "Node Id that you want to find the child node"
            },
            {
              "Name": "count",
              "Required": "Y",
              "Default": "",
              "Type": "number",
              "Description": "Number of months to get the report"
            },
            {
              "Name": "month",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "Select month to get sale report(ex. 1,2,..,12)[default = current month]"
            },
            {
              "Name": "year",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "Select year to get sale report(ex. 2015)[default = current year]"
            },
            {
              "Name": "action",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "Select action name to query from action log [default = \"sell\"]"
            },
            {
              "Name": "parameter",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "Select parameter to report from action log [default = \"amount\"]"
            }
          ]
        },
        {
          "MethodName": "Sale board",
          "Synopsis": "Leader board by sale amount of all nodes under specific node",
          "HTTPMethod": "GET",
          "URI": "/StoreOrg/nodes/:node_id/saleBoard/:layer",
          "RequiresOAuth": "Y",
          "parameters": [
            {
              "Name": "node_id",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "Node Id that you want to find the child node"
            },
            {
              "Name": "layer",
              "Required": "Y",
              "Default": "",
              "Type": "number",
              "Description": "Layer of nodes under specific node to find [default = 0 (for finding all layer)]"
            },
            {
              "Name": "month",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "Select month to get sale report(ex. 1,2,..,12)[default = current month]"
            },
            {
              "Name": "year",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "Select year to get sale report(ex. 2015)[default = current year]"
            },
            {
              "Name": "action",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "Select action name to query from action log [default = \"sell\"]"
            },
            {
              "Name": "parameter",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "Select parameter to report from action log [default = \"amount\"]"
            },
            {
              "Name": "page",
              "Required": "N",
              "Default": "0",
              "Type": "number",
              "Description": "Select page to be reported, page 1 is the first page [default = first page]"
            },
            {
              "Name": "limit",
              "Required": "N",
              "Default": "0",
              "Type": "number",
              "Description": "limit per page to be reported [default = \"20\"]"
            }
          ]
        },
        {
          "MethodName": "Add Content to Node",
          "Synopsis": "Add Content to specific Node",
          "HTTPMethod": "POST",
          "URI": "/StoreOrg/nodes/:node_id/addContent/:content_node_id",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "token",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "access token returned from Auth"
            },
            {
              "Name": "node_id",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "Node Id of store org to add player"
            },
            {
              "Name": "content_node_id",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "node id of content"
            }
          ]
        },
        {
          "MethodName": "Remove Content from Node",
          "Synopsis": "Remove Content from specific Node",
          "HTTPMethod": "POST",
          "URI": "/StoreOrg/nodes/:node_id/removeContent/:content_node_id",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "token",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "access token returned from Auth"
            },
            {
              "Name": "node_id",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "Node Id of store org to add player"
            },
            {
              "Name": "content_node_id",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "node id of content"
            }
          ]
        },
        {
          "MethodName": "Set Content role",
          "Synopsis": "Set Content's organization role to specific Node",
          "HTTPMethod": "POST",
          "URI": "/StoreOrg/nodes/:node_id/setContentRole/:content_node_id",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "token",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "access token returned from Auth"
            },
            {
              "Name": "node_id",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "Node Id of store org to set player's role"
            },
            {
              "Name": "content_node_id",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "node id of content"
            },
            {
              "Name": "role",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "Role name to set content's role"
            }
          ]
        },
        {
          "MethodName": "Unset Content role",
          "Synopsis": "Unset Content's organization role from specific Node",
          "HTTPMethod": "POST",
          "URI": "/StoreOrg/nodes/:node_id/unsetContentRole/:content_node_id",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "token",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "access token returned from Auth"
            },
            {
              "Name": "node_id",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "Node Id to unset player's role"
            },
            {
              "Name": "content_node_id",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "node id of content to unset content's role"
            },
            {
              "Name": "role",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "Role name to unset content's role"
            }
          ]
        }
      ]
    },
    {
      "name": "Content API",
      "methods": [
        {
          "MethodName": "Retrieve Content",
          "Synopsis": "Retrieve content(s) by specified filter fields",
          "HTTPMethod": "GET",
          "URI": "/Content",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "node_id",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "Specific node_id of content"
            },
            {
              "Name": "title",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "Specific title of content"
            },
            {
              "Name": "category",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "Specific category name of content"
            },
            {
              "Name": "date_check",
              "Required": "N",
              "Default": "true",
              "Type": "string",
              "Description": "Return content that available in this date range"
            },
            {
              "Name": "sort",
              "Required": "N",
              "Default": "title",
              "Type": "string",
              "Description": "Specific field to sort ('title', 'date_start', 'date_end', 'date_added', 'date_modified', 'random', 'followup', 'action')"
            },
            {
              "Name": "order",
              "Required": "N",
              "Default": "asc",
              "Type": "string",
              "Description": "Direction to order ('desc', 'asc'), but if sort is 'random' then this field will be seed number"
            },
            {
              "Name": "offset",
              "Required": "N",
              "Default": "0",
              "Type": "integer",
              "Description": "number of records starting"
            },
            {
              "Name": "limit",
              "Required": "N",
              "Default": "20",
              "Type": "integer",
              "Description": "number of results to return"
            },
            {
              "Name": "full_html",
              "Required": "N",
              "Default": "false",
              "Type": "string",
              "Description": "true, will return full html"
            },
            {
              "Name": "pin",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "Secret PIN given to content"
            },
            {
              "Name": "tags",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "Specific tag(s) to find (e.g. foo,bar)"
            },
            {
              "Name": "status",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "Specify status of the content to find. Possible values are true, false and all. The default value is true"
            },
            {
              "Name": "player_id",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "Display content with given player id"
            },
            {
              "Name": "only_new_content",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "true = Display content which the player does not provide any action (like/dislike) yet, false = Display content which the player has already provided an action (like/dislike)"
            },
            {
              "Name": "only_new_feedback",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "true = Display content which the player does not give feedback yet, false = Display content which the player has given the feedback"
            }
          ]
        },
        {
          "MethodName": "Count Content",
          "Synopsis": "Count content(s) by specified filter fields",
          "HTTPMethod": "GET",
          "URI": "/Content/count",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "title",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "Specific title of content"
            },
            {
              "Name": "category",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "Specific category name of content"
            },
            {
              "Name": "date_check",
              "Required": "N",
              "Default": "false",
              "Type": "string",
              "Description": "Return content that available in this date range"
            },
            {
              "Name": "pin",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "Secret PIN given to content"
            },
            {
              "Name": "tags",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "Specific tag(s) to find (e.g. foo,bar)"
            },
            {
              "Name": "status",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "Specify status of the content to find. Possible values are true, false and all. The default value is true"
            },
            {
              "Name": "player_id",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "Display content with given player id"
            },
            {
              "Name": "only_new_content",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "true = Display content which the player does not provide any action (like/dislike) yet, false = Display content which the player has already provided an action (like/dislike)"
            },
            {
              "Name": "only_new_feedback",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "true = Display content which the player does not give feedback yet, false = Display content which the player has given the feedback"
            }
          ]
        },
        {
          "MethodName": "Create content",
          "Synopsis": "Create content",
          "HTTPMethod": "POST",
          "URI": "/Content/addContent",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "token",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "access token returned from Auth"
            },
            {
              "Name": "node_id",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "Specific node_id of content"
            },
            {
              "Name": "title",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "Specific title of content"
            },
            {
              "Name": "summary",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "Specific summary of content"
            },
            {
              "Name": "detail",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "Specific detail of content"
            },
            {
              "Name": "category",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "Specific category name of content"
            },
            {
              "Name": "image",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "url to the content profile image"
            },
            {
              "Name": "status",
              "Required": "N",
              "Default": "false",
              "Type": "string",
              "Description": "content available status"
            },
            {
              "Name": "date_start",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "date start in the format YYYY-MM-DD (ex.1982-09-29)"
            },
            {
              "Name": "date_end",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "date end in the format YYYY-MM-DD (ex.1982-09-29)"
            },
            {
              "Name": "player_id",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "player id who generate this content"
            },
            {
              "Name": "pin",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "Secret PIN given to content"
            },
            {
              "Name": "tags",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "Specific tag(s) to add (e.g. foo,bar)"
            },
            {
              "Name": "key",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "custom field keys separated by comma"
            },
            {
              "Name": "value",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "custom field values separated by comma"
            }
          ]
        },
        {
          "MethodName": "Update content",
          "Synopsis": "Update content by content ID",
          "HTTPMethod": "POST",
          "URI": "/Content/:node_id/update",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "token",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "access token returned from Auth"
            },
            {
              "Name": "node_id",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "Specific node_id of content"
            },
            {
              "Name": "title",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "Specific title of content"
            },
            {
              "Name": "summary",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "Specific summary of content"
            },
            {
              "Name": "detail",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "Specific detail of content"
            },
            {
              "Name": "category",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "Specific category name of content"
            },
            {
              "Name": "image",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "url to the content profile image"
            },
            {
              "Name": "status",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "content available status"
            },
            {
              "Name": "date_start",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "date start in the format YYYY-MM-DD (ex.1982-09-29)"
            },
            {
              "Name": "date_end",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "date end in the format YYYY-MM-DD (ex.1982-09-29)"
            },
            {
              "Name": "pin",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "Secret PIN given to content"
            },
            {
              "Name": "tags",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "Specific tag(s) to update (e.g. foo,bar)"
            },
            {
              "Name": "key",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "custom field keys separated by comma"
            },
            {
              "Name": "value",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "custom field values separated by comma"
            }
          ]
        },
        {
          "MethodName": "Delete content",
          "Synopsis": "Delete existing content",
          "HTTPMethod": "POST",
          "URI": "/Content/:node_id/delete",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "token",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "access token returned from Auth"
            },
            {
              "Name": "node_id",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "node id as used in client's content"
            }
          ]
        },
        {
          "MethodName": "Retrieve Category",
          "Synopsis": "Retrieve category by specified filter fields",
          "HTTPMethod": "GET",
          "URI": "/Content/category",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "id",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "Specific id of category"
            },
            {
              "Name": "name",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "Specific name of category"
            },
            {
              "Name": "sort",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "Specific field to sort ('_id', 'name', 'date_added', 'date_modified')"
            },
            {
              "Name": "order",
              "Required": "N",
              "Default": "asc",
              "Type": "string",
              "Description": "Direction to order ('desc', 'asc')"
            },
            {
              "Name": "offset",
              "Required": "N",
              "Default": "0",
              "Type": "integer",
              "Description": "number of records starting"
            },
            {
              "Name": "limit",
              "Required": "N",
              "Default": "20",
              "Type": "integer",
              "Description": "number of results to return"
            }
          ]
        },
        {
          "MethodName": "Create Category",
          "Synopsis": "Create content category",
          "HTTPMethod": "POST",
          "URI": "/Content/category/create",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "token",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "access token returned from Auth"
            },
            {
              "Name": "name",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "Specific name of category"
            }
          ]
        },
        {
          "MethodName": "Update Category",
          "Synopsis": "Update content category",
          "HTTPMethod": "POST",
          "URI": "/Content/category/update",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "token",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "access token returned from Auth"
            },
            {
              "Name": "id",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "Specific id of category"
            },
            {
              "Name": "name",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "Specific new name of category"
            }
          ]
        },
        {
          "MethodName": "Delete Category",
          "Synopsis": "Delete content category",
          "HTTPMethod": "POST",
          "URI": "/Content/category/delete",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "token",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "access token returned from Auth"
            },
            {
              "Name": "id",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "Specific id of category"
            }
          ]
        },
        {
          "MethodName": "Action Like",
          "Synopsis": "Player send Like action to content",
          "HTTPMethod": "POST",
          "URI": "/Content/:node_id/player/:player_id/like",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "token",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "access token returned from Auth"
            },
            {
              "Name": "node_id",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "node id as used in client's content"
            },
            {
              "Name": "player_id",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "player id as used in client's website"
            },
            {
              "Name": "key",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "custom field keys separated by comma"
            },
            {
              "Name": "value",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "custom field values separated by comma"
            }
          ]
        },
        {
          "MethodName": "Action Dislike",
          "Synopsis": "Player send Dislike action to content",
          "HTTPMethod": "POST",
          "URI": "/Content/:node_id/player/:player_id/dislike",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "token",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "access token returned from Auth"
            },
            {
              "Name": "node_id",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "node id as used in client's content"
            },
            {
              "Name": "player_id",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "player id as used in client's website"
            },
            {
              "Name": "key",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "custom field keys separated by comma"
            },
            {
              "Name": "value",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "custom field values separated by comma"
            }
          ]
        },
        {
          "MethodName": "Give feedback",
          "Synopsis": "Player give any feedback(s) to content",
          "HTTPMethod": "POST",
          "URI": "/Content/:node_id/player/:player_id/feedback",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "token",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "access token returned from Auth"
            },
            {
              "Name": "node_id",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "node id as used in client's content"
            },
            {
              "Name": "player_id",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "player id as used in client's website"
            },
            {
              "Name": "feedback",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "feedback for player given to content"
            },
            {
                "Name": "key",
                "Required": "N",
                "Default": "",
                "Type": "string",
                "Description": "custom field keys separated by comma"
            },
            {
                "Name": "value",
                "Required": "N",
                "Default": "",
                "Type": "string",
                "Description": "custom field values separated by comma"
            }
          ]
        }
      ]
    },
    {
      "name": "Link API",
      "methods": [
        {
          "MethodName": "Find info of a link",
          "Synopsis": "Find detail of the data associated with a given link",
          "HTTPMethod": "GET",
          "URI": "/Link/",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "link",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "Link to find the data"
            }
          ]
        },
        {
          "MethodName": "Generate a link",
          "Synopsis": "Generate a unique link given data",
          "HTTPMethod": "POST",
          "URI": "/Link/generate",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "token",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "access token returned from Auth"
            }
          ]
        }
      ]
    },
    {
      "name": "File API",
      "methods": [
        {
          "MethodName": "Retrieve file data",
          "Synopsis": "Retrieve image(s) content by specified filter fields",
          "HTTPMethod": "GET",
          "URI": "/File/list",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "id",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "Specific id of file data"
            },
            {
              "Name": "player_id",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "Specific player_id of file data"
            },
            {
              "Name": "sort",
              "Required": "N",
              "Default": "date_added",
              "Type": "string",
              "Description": "Specific field to sort ('date_added', 'date_modified', 'type', 'file_size')"
            },
            {
              "Name": "order",
              "Required": "N",
              "Default": "asc",
              "Type": "string",
              "Description": "Direction to order ('desc', 'asc')"
            }
          ]
        },
        {
          "MethodName": "Delete",
          "Synopsis": "Permenently delete a Image File from Playbasis database.",
          "HTTPMethod": "POST",
          "URI": "/File/delete",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "token",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "access token returned from Auth"
            },
            {
              "Name": "file_name",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "image file name"
            }
          ]
        }
      ]
    },
    {
      "name": "Health API",
      "methods": [
        {
          "MethodName": "Retrieve FitBit Player",
          "Synopsis": "Retrieve FitBit Player",
          "HTTPMethod": "GET",
          "URI": "/Fitbit",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "player_id",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "player id as used in client's website"
            }
          ]
        },
        {
          "MethodName": "Add FitBit Player",
          "Synopsis": "Add new FitBit Player",
          "HTTPMethod": "POST",
          "URI": "/Fitbit/add",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "token",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "access token returned from Auth"
            },
            {
              "Name": "player_id",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "player id as used in client's website"
            },
            {
              "Name": "fitbit_token",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "FitBit token to access FitBit API"
            },
            {
              "Name": "subscription_id",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "subscription id to subscribe FitBit activity"
            }
          ]
        },
        {
          "MethodName": "Update FitBit Player",
          "Synopsis": "Update FitBit Player",
          "HTTPMethod": "POST",
          "URI": "/Fitbit/:player_id/update",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "token",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "access token returned from Auth"
            },
            {
              "Name": "player_id",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "player id as used in client's website"
            },
            {
              "Name": "fitbit_token",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "FitBit token to access FitBit API"
            },
            {
              "Name": "subscription_id",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "subscription id to subscribe FitBit activity"
            }
          ]
        },
        {
          "MethodName": "Delete FitBit Player",
          "Synopsis": "Delete FitBit Player",
          "HTTPMethod": "POST",
          "URI": "/Fitbit/:player_id/delete",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "token",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "access token returned from Auth"
            },
            {
              "Name": "player_id",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "player id as used in client's website"
            }
          ]
        },
        {
          "MethodName": "Retrieve FitBit Player Data",
          "Synopsis": "Retrieve FitBit Player Data",
          "HTTPMethod": "GET",
          "URI": "/Fitbit/:player_id/data",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "token",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "access token returned from Auth"
            },
            {
              "Name": "player_id",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "player id as used in client's website"
            },
            {
              "Name": "category",
              "Required": "N",
              "Default": "PROFILE",
              "Type": "enumerated",
              "Description": "category of data",
              "EnumeratedList": [
                "ACTIVITY",
                "BODY",
                "BP",
                "FOOD",
                "GLUCOSE",
                "HEART",
                "PROFILE",
                "SLEEP"
              ]
            },
            {
              "Name": "date",
              "Required": "N",
              "Default": "today",
              "Type": "string",
              "Description": "date start in the format yyyy-MM-dd or today."
            }
          ]
        }
      ]
    },
    {
      "name": "Trip API",
      "methods": [
        {
          "MethodName": "Retrieve Trip Data",
          "Synopsis": "List of Trips that the player has started.",
          "HTTPMethod": "GET",
          "URI": "/Trip",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "player_id",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "player id as used in client's website"
            },
            {
              "Name": "trip_id",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "Specific trip id"
            },
            {
              "Name": "finished",
              "Required": "N",
              "Default": " ",
              "Type": "enumerated",
              "Description": "Specific status of trip",
              "EnumeratedList": [
                " ",
                "true",
                "false"
              ]
            }
          ]
        },
        {
          "MethodName": "Start Trip",
          "Synopsis": "Start Trip",
          "HTTPMethod": "POST",
          "URI": "/Trip/startTrip",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "token",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "access token returned from Auth"
            },
            {
              "Name": "player_id",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "player id as used in client's website"
            }
          ]
        },
        {
          "MethodName": "Finish Trip",
          "Synopsis": "Finish Trip",
          "HTTPMethod": "POST",
          "URI": "/Trip/finishTrip",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "token",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "access token returned from Auth"
            },
            {
              "Name": "player_id",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "player id as used in client's website"
            },
            {
              "Name": "drive_log",
              "Required": "N",
              "Default": "false",
              "Type": "enumerated",
              "Description": "true = response with driving log",
              "EnumeratedList": [
                "true",
                "false"
              ]
            }
          ]
        },
        {
          "MethodName": "Retrieve Trip Log",
          "Synopsis": "Retrieve driving status log of specific trip_id",
          "HTTPMethod": "GET",
          "URI": "/Trip/getTripLog",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "player_id",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "player id as used in client's website"
            },
            {
              "Name": "trip_id",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "Specific trip id"
            }
          ]
        },
        {
          "MethodName": "Add Trip Log",
          "Synopsis": "Log driving status of the trip that player has started or specify by trip_id",
          "HTTPMethod": "POST",
          "URI": "/Trip/addTripLog",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "token",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "access token returned from Auth"
            },
            {
              "Name": "player_id",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "player id as used in client's website"
            },
            {
              "Name": "trip_id",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "Specific trip id"
            },
            {
              "Name": "speed",
              "Required": "N",
              "Default": "",
              "Type": "integer",
              "Description": "Current Speed ( km/h )"
            },
            {
              "Name": "latitude",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "Current Latitude"
            },
            {
              "Name": "longitude",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "Current Longitude"
            },
            {
              "Name": "altitude",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "Current Altitude"
            },
            {
              "Name": "rpm",
              "Required": "N",
              "Default": "",
              "Type": "integer",
              "Description": "Current RPM"
            },
            {
              "Name": "distance",
              "Required": "N",
              "Default": "",
              "Type": "integer",
              "Description": "Distance from start ( km )"
            },
            {
              "Name": "speed_limit",
              "Required": "N",
              "Default": "",
              "Type": "integer",
              "Description": "Speed limit at the location ( km/h )"
            }
          ]
        }
      ]
    },
    {
      "name": "Game API",
      "methods": [
        {
          "MethodName": "Retrieve Game setting",
          "Synopsis": "Retrieve game(s) setting by specified filter fields",
          "HTTPMethod": "GET",
          "URI": "/Game",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "game_name",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "Specific name of game to retrieve details of game"
            },
            {
              "Name": "stage_level",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "Specific stage level of game"
            },
            {
              "Name": "stage_name",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "Specific stage name of game"
            },
            {
              "Name": "sort",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "Specific field to sort ('game_name', 'date_added', 'date_modified', 'random')"
            },
            {
              "Name": "order",
              "Required": "N",
              "Default": "asc",
              "Type": "string",
              "Description": "Direction to order ('desc', 'asc'), but if sort is 'random' then this field will be seed number"
            },
            {
              "Name": "offset",
              "Required": "N",
              "Default": "0",
              "Type": "integer",
              "Description": "number of records starting"
            },
            {
              "Name": "limit",
              "Required": "N",
              "Default": "20",
              "Type": "integer",
              "Description": "number of results to return"
            },
            {
              "Name": "tags",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "Specific tag(s) to find (e.g. foo,bar)"
            },
            {
              "Name": "status",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "Specify status of the content to find. Possible values are true, false and all. The default value is true"
            }
          ]
        },
        {
          "MethodName": "Retrieve Game Item status",
          "Synopsis": "Retrieve player's item(s) status in game",
          "HTTPMethod": "GET",
          "URI": "/Game/playerItemStatus",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "game_name",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "Specific name of game to retrieve details of game"
            },
            {
              "Name": "player_id",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "player id as used in client's website"

            },
            {
              "Name": "stage_level",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "Specific stage level of game"
            },
            {
              "Name": "item_id",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Description": "Specific item id in the game"
            }
          ]
        },
        {
          "MethodName": "Set Game Current Stage",
          "Synopsis": "Set current stage for player to play the game",
          "HTTPMethod": "POST",
          "URI": "/Game/setCurrentStage",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "token",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "access token returned from Auth"
            },
            {
              "Name": "game_name",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "Specific name of game to retrieve details of game"
            },
            {
              "Name": "stage_level",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "Specific stage level of game"
            },
            {
              "Name": "player_id",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Description": "player id as used in client's website"

            }
          ]
        }
      ]
    }
  ]
}
